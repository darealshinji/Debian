# HG changeset patch
# User Andrew Victor <andrew.victor@mxit.com>
# Date 1464973294 18000
# Branch release-2.x.y
# Node ID b786e9814536aa96a3f7c8674d588b04d11c57a7
# Parent  5e5e84e8a79890e580158ac2eae073d7394e93b7
Fix for TALOS-CAN-0143

Index: pidgin-2.10.12/libpurple/protocols/mxit/protocol.c
===================================================================
--- pidgin-2.10.12.orig/libpurple/protocols/mxit/protocol.c	2016-07-12 08:15:47.067735194 -0400
+++ pidgin-2.10.12/libpurple/protocols/mxit/protocol.c	2016-07-12 08:15:47.067735194 -0400
@@ -2034,6 +2034,12 @@
 	 * userid \1 contactType \1 value0 \1 value1 ... valueN
 	 */
 
+	/* ensure that record[0] contacts the minumum number of fields */
+	if ( records[0]->fcount < 4 ) {
+		purple_debug_error( MXIT_PLUGIN_ID, "Insufficient number of fields in suggest contacts response. fields=%i", records[0]->fcount );
+		return;
+	}
+
 	/* the type of results */
 	searchType = atoi( records[0]->fields[0]->data );
 
@@ -2043,11 +2049,24 @@
 	/* set the count for attributes */
 	count = atoi( records[0]->fields[3]->data );
 
+	/* ensure that record[0] contains the specified number of attributes */
+	if ( records[0]->fcount < ( 4 + count ) ) {
+		purple_debug_error( MXIT_PLUGIN_ID, "Insufficient number of fields in suggest contacts response. fields=%i attributes=%i", records[0]->fcount, count );
+		return;
+	}
+
 	for ( i = 1; i < rcount; i ++ ) {
 		struct record*		rec		= records[i];
 		struct MXitProfile*	profile	= g_new0( struct MXitProfile, 1 );
 		int j;
 
+		/* ensure that each result contains the specified number of attributes */
+		if ( rec->fcount != ( 2 + count ) ) {
+			purple_debug_error( MXIT_PLUGIN_ID, "Insufficient number of fields in suggest contacts response. fields=%i attributes=%i", rec->fcount, count );
+			g_free( profile );
+			continue;
+		}
+
 		g_strlcpy( profile->userid, rec->fields[0]->data, sizeof( profile->userid ) );
 		// TODO: ContactType - User or Service
 
