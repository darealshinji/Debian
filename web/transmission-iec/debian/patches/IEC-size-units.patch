--- a/cli/cli.c
+++ b/cli/cli.c
@@ -38,25 +38,7 @@
 ****
 ***/
 
-#define MEM_K 1024
-#define MEM_K_STR "KiB"
-#define MEM_M_STR "MiB"
-#define MEM_G_STR "GiB"
-#define MEM_T_STR "TiB"
-
-#define DISK_K 1000
-#define DISK_B_STR   "B"
-#define DISK_K_STR "kB"
-#define DISK_M_STR "MB"
-#define DISK_G_STR "GB"
-#define DISK_T_STR "TB"
-
-#define SPEED_K 1000
-#define SPEED_B_STR  "B/s"
-#define SPEED_K_STR "kB/s"
-#define SPEED_M_STR "MB/s"
-#define SPEED_G_STR "GB/s"
-#define SPEED_T_STR "TB/s"
+#include "../utils/units.h"
 
 /***
 ****
--- a/daemon/daemon.c
+++ b/daemon/daemon.c
@@ -39,25 +39,7 @@
 
 #define MY_NAME "transmission-daemon"
 
-#define MEM_K 1024
-#define MEM_K_STR "KiB"
-#define MEM_M_STR "MiB"
-#define MEM_G_STR "GiB"
-#define MEM_T_STR "TiB"
-
-#define DISK_K 1000
-#define DISK_B_STR  "B"
-#define DISK_K_STR "kB"
-#define DISK_M_STR "MB"
-#define DISK_G_STR "GB"
-#define DISK_T_STR "TB"
-
-#define SPEED_K 1000
-#define SPEED_B_STR  "B/s"
-#define SPEED_K_STR "kB/s"
-#define SPEED_M_STR "MB/s"
-#define SPEED_G_STR "GB/s"
-#define SPEED_T_STR "TB/s"
+#include "../utils/units.h"
 
 #define LOGFILE_MODE_STR "a+"
 
--- a/daemon/remote.c
+++ b/daemon/remote.c
@@ -41,26 +41,7 @@
 
 #define ARGUMENTS TR_KEY_arguments
 
-#define MEM_K 1024
-#define MEM_B_STR   "B"
-#define MEM_K_STR "KiB"
-#define MEM_M_STR "MiB"
-#define MEM_G_STR "GiB"
-#define MEM_T_STR "TiB"
-
-#define DISK_K 1000
-#define DISK_B_STR  "B"
-#define DISK_K_STR "kB"
-#define DISK_M_STR "MB"
-#define DISK_G_STR "GB"
-#define DISK_T_STR "TB"
-
-#define SPEED_K 1000
-#define SPEED_B_STR  "B/s"
-#define SPEED_K_STR "kB/s"
-#define SPEED_M_STR "MB/s"
-#define SPEED_G_STR "GB/s"
-#define SPEED_T_STR "TB/s"
+#include "../utils/units.h"
 
 /***
 ****
--- a/gtk/util.c
+++ b/gtk/util.c
@@ -32,23 +32,25 @@
 ****  UNITS
 ***/
 
-const int mem_K = 1024;
-const char * mem_K_str = N_("KiB");
-const char * mem_M_str = N_("MiB");
-const char * mem_G_str = N_("GiB");
-const char * mem_T_str = N_("TiB");
+#include "../utils/units.h"
 
-const int disk_K = 1000;
-const char * disk_K_str = N_("kB");
-const char * disk_M_str = N_("MB");
-const char * disk_G_str = N_("GB");
-const char * disk_T_str = N_("TB");
+const int mem_K = MEM_K;
+const char * mem_K_str = N_(MEM_K_STR);
+const char * mem_M_str = N_(MEM_M_STR);
+const char * mem_G_str = N_(MEM_G_STR);
+const char * mem_T_str = N_(MEM_T_STR);
 
-const int speed_K = 1000;
-const char * speed_K_str = N_("kB/s");
-const char * speed_M_str = N_("MB/s");
-const char * speed_G_str = N_("GB/s");
-const char * speed_T_str = N_("TB/s");
+const int disk_K = DISK_K;
+const char * disk_K_str = N_(DISK_K_STR);
+const char * disk_M_str = N_(DISK_M_STR);
+const char * disk_G_str = N_(DISK_G_STR);
+const char * disk_T_str = N_(DISK_T_STR);
+
+const int speed_K = SPEED_K;
+const char * speed_K_str = N_(SPEED_K_STR);
+const char * speed_M_str = N_(SPEED_M_STR);
+const char * speed_G_str = N_(SPEED_G_STR);
+const char * speed_T_str = N_(SPEED_T_STR);
 
 /***
 ****
--- a/libtransmission/libtransmission-test.c
+++ b/libtransmission/libtransmission-test.c
@@ -179,26 +179,7 @@
     }
 }
 
-#define MEM_K 1024
-#define MEM_B_STR   "B"
-#define MEM_K_STR "KiB"
-#define MEM_M_STR "MiB"
-#define MEM_G_STR "GiB"
-#define MEM_T_STR "TiB"
-
-#define DISK_K 1000
-#define DISK_B_STR  "B"
-#define DISK_K_STR "kB"
-#define DISK_M_STR "MB"
-#define DISK_G_STR "GB"
-#define DISK_T_STR "TB"
-
-#define SPEED_K 1000
-#define SPEED_B_STR  "B/s"
-#define SPEED_K_STR "kB/s"
-#define SPEED_M_STR "MB/s"
-#define SPEED_G_STR "GB/s"
-#define SPEED_T_STR "TB/s"
+#include "../utils/units.h"
 
 tr_session *
 libttest_session_init (tr_variant * settings)
--- a/configure.ac
+++ b/configure.ac
@@ -438,6 +438,24 @@
 
 dnl ----------------------------------------------------------------------------
 dnl
+dnl  use IEC size units (1024 b = 1 kiB)
+
+use_iec_units="no"
+AC_ARG_ENABLE([iec-units],
+              AS_HELP_STRING([--enable-iec-units],[Use IEC size units (1024 b = 1 kiB)]),
+              [want_iec_units=${enableval}],
+              [want_iec_units=no])
+if test "x$want_iec_units" != "xno" ; then
+     CXXFLAGS="$CXXFLAGS -DUSE_IEC_UNITS"
+     CPPFLAGS="$CPPFLAGS -DUSE_IEC_UNITS"
+     IEC_UNITS_QT="USE_IEC_UNITS"
+     use_iec_units="yes"
+fi
+AC_SUBST(IEC_UNITS_QT)
+
+
+dnl ----------------------------------------------------------------------------
+dnl
 dnl  platform-specific stuff.
 
 AC_CANONICAL_HOST
@@ -558,6 +576,7 @@
 
    Source code location:                              ${srcdir}
    Compiler:                                          ${CXX}
+   Use IEC size units:                                ${use_iec_units}
 
    Build libtransmission:                             yes
       * optimized for low-resource systems:           ${enable_lightweight}
--- /dev/null
+++ b/utils/units.h
@@ -0,0 +1,53 @@
+/*
+ * This file Copyright (C) 2012-2014 Mnemosyne LLC
+ *
+ * It may be used under the GNU GPL versions 2 or 3
+ * or any future license endorsed by Mnemosyne LLC.
+ *
+ * $Id:$
+ */
+
+#ifndef UNITS_H
+#define UNITS_H
+
+#define MEM_K     1024
+#define MEM_K_STR "KiB"
+#define MEM_M_STR "MiB"
+#define MEM_G_STR "GiB"
+#define MEM_T_STR "TiB"
+
+#define DISK_B_STR  "B"
+#define MEM_B_STR   "B"
+#define SPEED_B_STR "B/s"
+
+#ifdef USE_IEC_UNITS
+
+#define DISK_K     1024
+#define DISK_K_STR "kiB"
+#define DISK_M_STR "MiB"
+#define DISK_G_STR "GiB"
+#define DISK_T_STR "TiB"
+
+#define SPEED_K     1024
+#define SPEED_K_STR "kiB/s"
+#define SPEED_M_STR "MiB/s"
+#define SPEED_G_STR "GiB/s"
+#define SPEED_T_STR "TiB/s"
+
+#else
+
+#define DISK_K     1000
+#define DISK_K_STR "kB"
+#define DISK_M_STR "MB"
+#define DISK_G_STR "GB"
+#define DISK_T_STR "TB"
+
+#define SPEED_K     1000
+#define SPEED_K_STR "kB/s"
+#define SPEED_M_STR "MB/s"
+#define SPEED_G_STR "GB/s"
+#define SPEED_T_STR "TB/s"
+
+#endif
+
+#endif
--- a/qt/formatter.cc
+++ b/qt/formatter.cc
@@ -14,6 +14,7 @@
 
 #include "formatter.h"
 #include "speed.h"
+#include "../utils/units.h"
 
 /***
 ****  Constants
@@ -31,36 +32,36 @@
 void
 Formatter :: initUnits ()
 {
- speed_K = 1000;
- unitStrings[SPEED][B]  = tr ( "B/s");
- unitStrings[SPEED][KB] = tr ("kB/s");
- unitStrings[SPEED][MB] = tr ("MB/s");
- unitStrings[SPEED][GB] = tr ("GB/s");
- unitStrings[SPEED][TB] = tr ("TB/s");
+ speed_K = SPEED_K;
+ unitStrings[SPEED][B]  = tr (SPEED_B_STR);
+ unitStrings[SPEED][KB] = tr (SPEED_K_STR);
+ unitStrings[SPEED][MB] = tr (SPEED_M_STR);
+ unitStrings[SPEED][GB] = tr (SPEED_G_STR);
+ unitStrings[SPEED][TB] = tr (SPEED_T_STR);
  tr_formatter_speed_init (speed_K,
                           unitStrings[SPEED][KB].toUtf8().constData(),
                           unitStrings[SPEED][MB].toUtf8().constData(),
                           unitStrings[SPEED][GB].toUtf8().constData(),
                           unitStrings[SPEED][TB].toUtf8().constData());
 
-  size_K = 1000;
-  unitStrings[SIZE][B]  = tr ( "B");
-  unitStrings[SIZE][KB] = tr ("kB");
-  unitStrings[SIZE][MB] = tr ("MB");
-  unitStrings[SIZE][GB] = tr ("GB");
-  unitStrings[SIZE][TB] = tr ("TB");
+  size_K = DISK_K;
+  unitStrings[SIZE][B]  = tr (DISK_B_STR);
+  unitStrings[SIZE][KB] = tr (DISK_K_STR);
+  unitStrings[SIZE][MB] = tr (DISK_M_STR);
+  unitStrings[SIZE][GB] = tr (DISK_G_STR);
+  unitStrings[SIZE][TB] = tr (DISK_T_STR);
   tr_formatter_size_init (size_K,
                           unitStrings[SIZE][KB].toUtf8().constData(),
                           unitStrings[SIZE][MB].toUtf8().constData(),
                           unitStrings[SIZE][GB].toUtf8().constData(),
                           unitStrings[SIZE][TB].toUtf8().constData());
 
-  mem_K = 1024;
-  unitStrings[MEM][B]  = tr (  "B");
-  unitStrings[MEM][KB] = tr ("KiB");
-  unitStrings[MEM][MB] = tr ("MiB");
-  unitStrings[MEM][GB] = tr ("GiB");
-  unitStrings[MEM][TB] = tr ("TiB");
+  mem_K = MEM_K;
+  unitStrings[MEM][B]  = tr (MEM_B_STR);
+  unitStrings[MEM][KB] = tr (MEM_K_STR);
+  unitStrings[MEM][MB] = tr (MEM_M_STR);
+  unitStrings[MEM][GB] = tr (MEM_G_STR);
+  unitStrings[MEM][TB] = tr (MEM_T_STR);
   tr_formatter_mem_init (mem_K,
                          unitStrings[MEM][KB].toUtf8().constData(),
                          unitStrings[MEM][MB].toUtf8().constData(),
--- a/qt/config.pri.in
+++ b/qt/config.pri.in
@@ -1,3 +1,4 @@
 LIBUTP_LIBS = @LIBUTP_LIBS_QT@ 
 LIBUPNP_LIBS = @LIBUPNP_LIBS_QT@
 LIBNATPMP_LIBS = @LIBNATPMP_LIBS_QT@
+DEFINES += @IEC_UNITS_QT@
