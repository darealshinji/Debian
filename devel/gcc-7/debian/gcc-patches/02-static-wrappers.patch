--- a/gcc/c/gccspec.c
+++ b/gcc/c/gccspec.c
@@ -75,8 +75,6 @@
 	}
     }
 
-  if  (shared_libgcc)
-    {
       new_decoded_options = XNEWVEC (struct cl_decoded_option, argc + 1);
 
       i = 0;
@@ -87,12 +85,16 @@
 	}
       while (i < argc);
 
+    if (shared_libgcc) {
       generate_option (OPT_shared_libgcc, NULL, 1, CL_DRIVER,
 		       &new_decoded_options[i++]);
+    } else {
+      generate_option (OPT_static_libgcc, NULL, 1, CL_DRIVER,
+		       &new_decoded_options[i++]);
+    }
 
       *in_decoded_options_count = i;
       *in_decoded_options = new_decoded_options;
-    }
 #endif
 }
 
--- a/gcc/cp/g++spec.c
+++ b/gcc/cp/g++spec.c
@@ -108,7 +108,7 @@
   int static_link = 0;
 
   /* True if we should add -shared-libgcc to the command-line.  */
-  int shared_libgcc = 1;
+  int shared_libgcc = 0;
 
   /* The total number of arguments with the new stuff.  */
   unsigned int argc;
@@ -156,7 +156,7 @@
 	    args[i] |= WITHLIBC;
 	  else
 	    /* Unrecognized libraries (e.g. -lfoo) may require libstdc++.  */
-	    library = (library == 0) ? 1 : library;
+	    library = (library == 0) ? 2 : library;
 	  break;
 
 	case OPT_pg:
@@ -170,7 +170,7 @@
 		  || strcmp (arg, "c++-cpp-output") == 0
 		  || strcmp (arg, "objective-c++") == 0
 		  || strcmp (arg, "objective-c++-cpp-output") == 0))
-	    library = 1;
+	    library = 2;
 		
 	  saw_speclang = 1;
 	  break;
@@ -180,7 +180,7 @@
 	  /* Arguments that go directly to the linker might be .o files,
 	     or something, and so might cause libstdc++ to be needed.  */
 	  if (library == 0)
-	    library = 1;
+	    library = 2;
 	  break;
 
 	case OPT_c:
@@ -198,8 +198,8 @@
 	  static_link = 1;
 	  break;
 
-	case OPT_static_libgcc:
-	  shared_libgcc = 0;
+	case OPT_shared_libgcc:
+	  shared_libgcc = 1;
 	  break;
 
 	case OPT_static_libstdc__:
@@ -248,7 +248,7 @@
 		    && (len <= 4 || strcmp (arg + (len - 4), ".HPP") != 0)
 		    && (len <= 4 || strcmp (arg + (len - 4), ".tcc") != 0)
 		    && (len <= 3 || strcmp (arg + (len - 3), ".hh") != 0))
-		  library = 1;
+		  library = 2;
 	      }
 	  }
 	  break;
@@ -385,8 +385,8 @@
     }
   if (saw_libc)
     new_decoded_options[j++] = *saw_libc;
-  if (shared_libgcc && !static_link)
-    generate_option (OPT_shared_libgcc, NULL, 1, CL_DRIVER,
+  if (!shared_libgcc)
+    generate_option (OPT_static_libgcc, NULL, 1, CL_DRIVER,
 		     &new_decoded_options[j++]);
 
   *in_decoded_options_count = j;
